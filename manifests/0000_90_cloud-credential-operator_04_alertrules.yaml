apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  annotations:
    exclude.release.uccp.io/internal-uccp-hosted: "true"
    include.release.uccp.io/self-managed-high-availability: "true"
  name: cloud-credential-operator-alerts
  namespace: uccp-cloud-credential-operator
spec:
  groups:
  - name: CloudCredentialOperator
    rules:
    - alert: CloudCredentialOperatorTargetNamespaceMissing
      annotations:
        message: CredentialsRequest(s) pointing to non-existent namespace
        summary: One ore more CredentialsRequest CRs are asking to save credentials to a non-existent namespace.
        description: At least one CredentialsRequest custom resource has specified in its .spec.secretRef.namespace field a namespace which does not presently exist. This means the Cloud Credential Operator in the uccp-cloud-credential-operator namespace cannot process the CredentialsRequest resource. Check the conditions of all CredentialsRequests with 'oc get credentialsrequest -A' to find any CredentialsRequest(s) with a .status.condition showing a condition type of MissingTargetNamespace set to True.
      expr: cco_credentials_requests_conditions{condition="MissingTargetNamespace"}
        > 0
      for: 5m
      labels:
        severity: warning
    - alert: CloudCredentialOperatorProvisioningFailed
      annotations:
        message: CredentialsRequest(s) unable to be fulfilled
        summary: One or more CredentialsRequest CRs are unable to be processed.
        description: While processing a CredentialsRequest, the Cloud Credential Operator encountered an issue. Check the conditions of all CredentialsRequets with 'oc get credentialsrequest -A' to find any CredentialsRequest(s) with a .stats.condition showing a condition type of CredentialsProvisionFailure set to True for more details on the issue.
      expr: cco_credentials_requests_conditions{condition="CredentialsProvisionFailure"}
        > 0
      for: 5m
      labels:
        severity: warning
    - alert: CloudCredentialOperatorDeprovisioningFailed
      annotations:
        message: CredentialsRequest(s) unable to be cleaned up
        summary: One or more CredentialsRequest CRs are unable to be deleted.
        description: While processing a CredentialsRequest marked for deletion, the Cloud Credential Operator encountered an issue. Check the conditions of all CredentialsRequests with 'oc get credentialsrequest -A' to find any CredentialsRequest(s) with a .status.condition showing a condition type of CredentialsDeprovisionFailure set to True for more details on the issue.
      expr: cco_credentials_requests_conditions{condition="CredentialsDeprovisionFailure"}
        > 0
      for: 5m
      labels:
        severity: warning
    - alert: CloudCredentialOperatorInsufficientCloudCreds
      annotations:
        message: Cluster's cloud credentials insufficient for minting or passthrough
        summary: Problem with the available platform credentials.
        description: The Cloud Credential Operator has determined that there are insufficient permissions to process one or more CredentialsRequest CRs. Check the conditions of all CredentialsRequests with 'oc get credentialsrequest -A' to find any CredentialsRequest(s) with a .status.condition showing a condition type of InsufficientCloudCreds set to True for more details.
      expr: cco_credentials_requests_conditions{condition="InsufficientCloudCreds"}
        > 0
      for: 5m
      labels:
        severity: warning
    - alert: CloudCredentialOperatorStaleCredentials
      annotations:
        message: 1 or more credentials requests are stale and should be deleted. Check the status.conditions on CredentialsRequest CRs to identify the stale one(s).
        summary: One or more CredentialsRequest CRs are stale and should be deleted.
        description: The Cloud Credential Operator (CCO) has detected one or more stale CredentialsRequest CRs that need to be manually deleted. When the CCO is in Manual credentials mode, it will not automatially clean up stale CredentialsRequest CRs (that may no longer be necessary in the present version of Uccp because it could involve needing to clean up manually created cloud resources. Check the conditions of all CredentialsRequests with 'oc get credentialsrequest -A' to find any CredentialsRequest(s) with a .status.condition showing a condition type of StaleCredentials set to True. Determine the appropriate steps to clean up/deprovision any previously provisioned cloud resources. Finally, delete the CredentialsRequest with an 'oc delete'.
      expr: cco_credentials_requests_conditions{condition="StaleCredentials"}
        > 0
      for: 5m
      labels:
        severity: warning
